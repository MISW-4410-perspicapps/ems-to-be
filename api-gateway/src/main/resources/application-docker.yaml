spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      server:
        webflux:
          filter:
            secure-headers:
              enabled: true
          routes:
            # Public routes - no authentication required
            - id: auth-service
              uri: ${AUTH_SERVICE_URL:http://auth-service:8081}
              predicates:
                - Path=/api/auth/**
                
            - id: gateway-health
              uri: http://localhost:8080
              predicates:
                - Path=/api/gateway/**
                
            # Routes requiring authentication
            - id: ems-legacy
              uri: ${EMS_LEGACY_URL:http://ems-legacy:8081}
              predicates:
                - Path=/ems/legacy/login
              filters:
                - RewritePath=/ems/legacy/login, /ems/login
                - name: RoleBasedAuthorizationFilter
                  args:
                    allowedRoles: ADMIN,MANAGER,EMPLOYEE 
          discovery:
            locator:
              enabled: false

# Server configuration
server:
  port: 8080
  # Production server configuration
  netty:
    connection-timeout: 20s
    idle-timeout: 60s
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain

# JWT Configuration - use environment variables in production
jwt:
  secret: ${JWT_SECRET:mySecretKey123456789012345678901234567890}
  expiration: ${JWT_EXPIRATION:86400}

# Actuator Configuration - restricted in production
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  security:
    enabled: true

# Logging Configuration
logging:
  level:
    org.springframework.cloud.gateway: ${LOG_LEVEL:INFO}
    com.ems.gateway: ${LOG_LEVEL:INFO}
    root: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
