spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      server:
        webflux:
          #filter:
          #  secure-headers:
          #    enabled: true
          # Configure CORS globally
          globalcors:
            cors-configurations:
              '[/**]':
                allowedOriginPatterns:
                  - "http://localhost:*"
                  - "http://localhost"
                  - "http://127.0.0.1:*"
                  - "http://127.0.0.1"
                allowedMethods:
                  - GET
                  - POST
                  - PUT
                  - DELETE
                  - OPTIONS
                  - PATCH
                allowedHeaders: '*'
                allowCredentials: true
                maxAge: 3600
          # Configure routes
          routes:
            # Public routes - gateway health endpoints
            - id: gateway-public
              uri: http://localhost:8080
              predicates:
                - Path=/api/gateway/**

            # Backend health check (public)
            - id: backend-health
              uri: ${URL_BACKEND:http://ems-backend:8081}
              predicates:
                - Path=/api/backend/health
              filters:
                - RewritePath=/api/backend/health, /health

            # Authentication routes (public) - route to backend
            - id: backend-auth
              uri: ${URL_BACKEND:http://ems-backend:8081}
              predicates:
                - Path=/api/auth/**
              filters:
                - RewritePath=/api/auth/(?<segment>.*), /auth/$\{segment}
                - name: AuthTokenCookieFilter
                  args:
                    cookieName: auth_token
                    httpOnly: true
                    secure: false
                    sameSite: Strict
                    maxAge: PT24H
                    path: /

            # Legacy dashboard path
            - id: legacy-dashboard
              uri: ${URL_LEGACY:http://ems-legacy:8082}
              predicates:
                - Path=/api/legacy/dashboard
              filters:
                - RewritePath=/api/legacy/dashboard, /ems/login
                - name: RoleBasedAuthorizationFilter
                  args:
                    allowedRoles: ADMIN,MANAGER,EMPLOYEE,NA

            # Another legacy paths
            - id: legacy-dashboard
              uri: ${URL_LEGACY:http://ems-legacy:8082}
              predicates:
                - Path=/api/legacy/**
              filters:
                - RewritePath=/api/legacy/(?<segment>.*), /ems/$\{segment}
                - name: RoleBasedAuthorizationFilter
                  args:
                    allowedRoles: ADMIN,MANAGER,EMPLOYEE,NA

            # File management routes (requires authentication)
            - id: file-service
              uri: ${URL_BACKEND:http://ems-backend:8081}
              predicates:
                - Path=/api/files/**
              filters:
                - name: RoleBasedAuthorizationFilter
                  args:
                    allowedRoles: ADMIN,MANAGER,EMPLOYEE

          discovery:
            locator:
              enabled: false

# Server configuration
server:
  port: 8080
  # Production server configuration
  netty:
    connection-timeout: 20s
    idle-timeout: 60s
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain

# JWT Configuration - use environment variables in production
jwt:
  secret: ${JWT_SECRET:mySecretKey123456789012345678901234567890}
  expiration: ${JWT_EXPIRATION:86400}

# Actuator Configuration - restricted in production
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized

# Logging Configuration
logging:
  level:
    '[com.ems.gateway.filter.RequestLoggingFilter]': INFO
    '[com.ems.gateway.filter.AuthTokenCookieFilter]': INFO
    '[org.springframework.web.server.adapter.HttpWebHandlerAdapter]': WARN
    '[reactor.netty]': WARN
    root: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} %-5level - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} %-5level - %msg%n"
